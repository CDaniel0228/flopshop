<!DOCTYPE html>
<html>

<head>
    <title>Ejemplo de Bootstrap Tabs</title>
    <!-- Enlaces a las librerías de Bootstrap y Bootstrap Material Design (MDB) -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/mdbootstrap/4.19.2/css/mdb.min.css">
    <link href="resources/css/bootstrap.min.css" rel="stylesheet">
    <!-- Agregar jQuery antes de Bootstrap.js -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.5.2/js/bootstrap.min.js"></script>

    <script async defer crossorigin="anonymous" src="https://connect.facebook.net/en_US/sdk.js"></script>
    <script src="https://accounts.google.com/gsi/client" async defer></script>

</head>

<body>
    <%- include('./menu') %>
        <div class="container" style="width: 387px;">
            <!-- Pills navs -->
            <ul class="nav nav-pills nav-justified mb-3" id="ex1" role="tablist">
                <li class="nav-item" role="presentation">
                    <a class="nav-link active" id="tab-login" data-toggle="pill" href="#pills-login" role="tab"
                        aria-controls="pills-login" aria-selected="true">Login</a>
                </li>
                <li class="nav-item" role="presentation">
                    <a class="nav-link" id="tab-register" data-toggle="pill" href="#pills-register" role="tab"
                        aria-controls="pills-register" aria-selected="false">Register</a>
                </li>
            </ul>
            <!-- Pills navs -->

            <!-- Pills content -->
            <div class="tab-content">
                <div class="tab-pane fade show active" id="pills-login" role="tabpanel" aria-labelledby="tab-login">
                    <form action="/login" method="POST">
                        <div class="text-center mb-3">
                            <p>Sign in with:</p>
                            <fb:login-button scope="public_profile,email" onlogin="checkLoginState();">
                            </fb:login-button>

                            <div id="g_id_onload"
                                data-client_id="28291341601-4o1mkblen964d1i5efm0vs0f6ufmlr5e.apps.googleusercontent.com"
                                data-callback="handleCredentialResponse">
                            </div>
                            <div class="g_id_signin" data-type="icon" data-shape="square" data-theme="outline"
                                data-text="signin_with" data-size="large">
                            </div>

                        </div>

                        <p class="text-center">or:</p>

                        <!-- Email input -->
                        <div class="form-outline mb-4">
                            <input type="email" id="loginName" placeholder="Email" name="email" class="form-control" />
                        </div>

                        <!-- Password input -->
                        <div class="form-outline mb-4">
                            <input type="password" id="loginPassword" placeholder="Contraseña" name="password"
                                class="form-control" />
                        </div>

                        <!-- 2 column grid layout -->
                        <div class="row mb-4">
                            <div class="col-md-6 d-flex justify-content-center">
                                <!-- Checkbox -->
                                <div class="form-check mb-3 mb-md-0">
                                    <input class="form-check-input" type="checkbox" value="" id="loginCheck" checked />
                                    <label class="form-check-label" for="loginCheck"> Remember me </label>
                                </div>
                            </div>

                            <div class="col-md-6 d-flex justify-content-center">
                                <!-- Simple link -->
                                <a href="#!">Forgot password?</a>
                            </div>
                        </div>

                        <!-- Submit button -->
                        <button type="submit" value="correo" class="btn btn-primary btn-block mb-4">Sign in</button>

                        <!-- Register buttons -->
                        <div class="text-center">
                            <p>Not a member? <a href="#!">Register</a></p>
                        </div>

                    </form>
                </div>
                <div class="tab-pane fade" id="pills-register" role="tabpanel" aria-labelledby="tab-register">

                    <form>
                        <div class="text-center mb-3">
                            <p>Sign up with:</p>
                            <button type="button" class="btn btn-link btn-floating mx-1">
                                <i class="fab fa-facebook-f"></i>
                            </button>

                            <button type="button" class="btn btn-link btn-floating mx-1">
                                <i class="fab fa-google"></i>
                            </button>

                            <button type="button" class="btn btn-link btn-floating mx-1">
                                <i class="fab fa-twitter"></i>
                            </button>

                            <button type="button" class="btn btn-link btn-floating mx-1">
                                <i class="fab fa-github"></i>
                            </button>
                        </div>

                        <p class="text-center">or:</p>

                        <!-- Username input -->
                        <div class="form-outline mb-4">
                            <input type="text" id="registerUsername" placeholder="Nombre" class="form-control" />
                        </div>

                        <!-- Email input -->
                        <div class="form-outline mb-4">
                            <input type="email" id="registerEmail" placeholder="Email" class="form-control" />
                        </div>

                        <!-- Password input -->
                        <div class="form-outline mb-4">
                            <input type="password" id="registerPassword" placeholder="Contraseña"
                                class="form-control" />
                        </div>

                        <!-- Repeat Password input -->
                        <div class="form-outline mb-4">
                            <input type="password" id="registerRepeatPassword" placeholder="Repetir contraseña"
                                class="form-control" />
                        </div>


                        <!-- Submit button -->
                        <button type="submit" class="btn btn-primary btn-block mb-3">Sign in</button>
                    </form>
                </div>
            </div>
        </div>
        <%- include('./foot') %>
        <!-- Pills content -->
        <script>
            function handleCredentialResponse(response) {
                const idToken = response.credential; // Corregir la obtención del ID token

                // Crear un objeto de datos que contiene el id_token
                const data = { id_token: idToken };

                // Realizar una solicitud POST al servidor
                fetch('/gom', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data),
                })
                    .then((response) => {
                        // Verificar el tipo de contenido de la respuesta
                        const contentType = response.headers.get('Content-Type');
                
                        if (contentType && contentType.includes('application/json')) {
                            // Si la respuesta es JSON, analízala como tal
                            return response.json();
                        } else {
                            // Si no es JSON, maneja la respuesta de otra manera (por ejemplo, como texto)
                            return response.text();
                        }
                    })
                    .then((data) => {
                        // Procesar la respuesta según su tipo
                        if (typeof data === 'object') {
                            // Si es un objeto JSON
                            console.log(data);
                            alert("¡La función handleCredentialResponse se ejecutó! " + idToken);
                        } else {
                            // Si es otro tipo de contenido (por ejemplo, texto)
                            console.log(data);
                            alert("¡La función handleCredentialResponse se ejecutó! (No era JSON)");
                            window.location.href = '/formulario';
                        }
                    })
                    .catch((error) => {
                        console.error('Error al realizar la solicitud POST:', error);
                    });
                
            }

            function statusChangeCallback(response) {  // Called with the results from FB.getLoginStatus().
                console.log('statusChangeCallback');
                console.log(response);                   // The current login status of the person.
                if (response.status === 'connected') {   // Logged into your webpage and Facebook.
                    testAPI();
                } else {                                 // Not logged into your webpage or we are unable to tell.
                    document.getElementById('status').innerHTML = 'Please log ' +
                        'into this webpage.';
                }
            }


            function checkLoginState() {               // Called when a person is finished with the Login Button.
                FB.getLoginStatus(function (response) {   // See the onlogin handler
                    statusChangeCallback(response);
                    const idToken = response.authResponse; // Corregir la obtención del ID token

                    // Crear un objeto de datos que contiene el id_token
                    const data = { id_token: idToken };
                    fetch('/facebook', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(data),
                    })
                        .then((response) => {
                            // Verificar el tipo de contenido de la respuesta
                            const contentType = response.headers.get('Content-Type');
                    
                            if (contentType && contentType.includes('application/json')) {
                                // Si la respuesta es JSON, analízala como tal
                                return response.json();
                            } else {
                                // Si no es JSON, maneja la respuesta de otra manera (por ejemplo, como texto)
                                return response.text();
                            }
                        })
                        .then((data) => {
                            // Procesar la respuesta según su tipo
                            if (typeof data === 'object') {
                                // Si es un objeto JSON
                                console.log(data);
                                alert("¡La función handleCredentialResponse se ejecutó! " + idToken);
                            } else {
                                // Si es otro tipo de contenido (por ejemplo, texto)
                                console.log(data);
                                alert("¡La función handleCredentialResponse se ejecutó! (No era JSON)");
                                window.location.href = '/formulario';
                            }
                        })
                        .catch((error) => {
                            console.error('Error al realizar la solicitud POST:', error);
                        });
                });
            }


            window.fbAsyncInit = function () {
                FB.init({
                    appId: '987368722542264',
                    cookie: true,                     // Enable cookies to allow the server to access the session.
                    xfbml: true,                     // Parse social plugins on this webpage.
                    version: 'v18.0'           // Use this Graph API version for this call.
                });


                FB.getLoginStatus(function (response) {   // Called after the JS SDK has been initialized.
                    statusChangeCallback(response);        // Returns the login status.
                });
            };

            function testAPI() {                      // Testing Graph API after login.  See statusChangeCallback() for when this call is made.
                console.log('Welcome!  Fetching your information.... ');
                FB.api('/me', function (response) {
                    console.log('Successful login for: ' + response.name);
                    document.getElementById('status').innerHTML =
                        'Thanks for logging in, ' + response.name + '!';
                });
            }
        </script>

</body>

</html>